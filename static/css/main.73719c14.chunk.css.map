{"version":3,"sources":["index.css","page-navbar.styles.scss","page-data-loading-card.styles.scss","../../../../node_modules/bootstrap/scss/mixins/_breakpoints.scss","page-container.styles.scss","page-body-list.styles.scss","page-body-top-jumbotron-card.styles.scss","page-background.styles.scss"],"names":[],"mappings":"AAAA,UACI,WAAW,CACX,QACJ,CAEA,KAEI,sGAAoE,CACpE,uBAA2B,CAC3B,wBAA0B,CAC1B,qBAAsB,CACtB,2BACJ,CAEA,0BARI,WAUJ,CChBA,YACI,+BAAA,CAEA,4BACI,cAAA,CACA,aAAA,CAGJ,2BACI,WAAA,CAGJ,kCACI,QAAA,CACA,2DACI,gBAAA,CACA,UAAA,CAMJ,iFACI,YAAA,CACA,+BAAA,CAEJ,wCACI,YAAA,CAIR,uBACI,UAAA,CACA,oBAAA,CACA,kBAAA,CACA,WAAA,CACA,aAAA,CACA,UAAA,CACA,6BACI,+BAAA,CCnCZ,8BACI,+BAAA,CCoEA,4BDrEJ,8BAIQ,UAAA,CAAA,CCiEJ,2BDrEJ,8BAQQ,UAAA,CAAA,CAGJ,8CACI,YAAA,CACA,WAAA,CEjBR,gBACI,WAAA,CACA,sGAEA,CAAA,uBACA,CAAA,2BAAA,CAAA,qBAAA,CCLJ,WACI,+BAAA,CCDJ,qBACI,+BAAA,CCDJ,wBACI,WAAA,CACA,UAAA,CACA,aAAA,CACA,iBAAA,CAQJ,WACI,sGAMA,CAAA,0BAJA,qBAIA,CAAA,uBAOA,CAPA,eAAA,0FAOA,CAAA,aACA,oGAAA,CAAA,qBAAA,CAAA,uBAAA","file":"main.73719c14.chunk.css","sourcesContent":["html,body{\r\n    height:100%;\r\n    margin:0;\r\n}\r\n\r\nbody{\r\n    height:100%;\r\n    background-image: url('./images/ocean-water-wave-photo-1295138.jpg');\r\n    background-position: center;\r\n    background-repeat: initial;\r\n    background-size: cover;\r\n    background-attachment: fixed;\r\n}\r\n\r\n#root, .App, .page-top{\r\n    height:100%;\r\n}\r\n\r\n\r\n","#pageHeader{\r\n    background-color: rgba(0,0,0,0.3);\r\n    \r\n    .jax-tides-logo{\r\n        height:2.375em;\r\n        width:7.875em;\r\n    }\r\n\r\n    & a.navbar-brand{\r\n        padding:1em;\r\n    }\r\n    \r\n    & button.navbar-toggler{\r\n        border:0px;\r\n        & span.navbar-toggler-icon{\r\n            font-size: 2.2rem;\r\n            color:white;\r\n        }\r\n        &:active{\r\n            outline: none;\r\n            background-color: rgba(0,0,0,0.3);\r\n        }\r\n        &:hover{\r\n            outline: none;\r\n            background-color: rgba(0,0,0,0.3);\r\n        }\r\n        &:focus{\r\n            outline:none;\r\n        }\r\n    }\r\n\r\n    & div.link a{\r\n        color:white;\r\n        text-decoration: none;\r\n        border-radius:0.3em;\r\n        padding:1em;\r\n        display:block;\r\n        width:100%;\r\n        &:hover{\r\n            background-color: rgba(0,0,0,0.3);\r\n        }\r\n    }\r\n}\r\n","@import \"node_modules/bootstrap/scss/functions\";\r\n@import \"node_modules/bootstrap/scss/variables\";\r\n@import \"node_modules/bootstrap/scss/mixins/_breakpoints\";\r\n\r\ndiv.card.loading-card-content{\r\n    background-color:rgba(0,0,0,0.7);\r\n\r\n    @include media-breakpoint-down(lg) {\r\n        width:44vw;\r\n    }\r\n\r\n    @include media-breakpoint-down(sm) {\r\n        width:75vw;\r\n    }\r\n\r\n    .loader-spinner{\r\n        height:3.5em;\r\n        width:3.5em;\r\n    }\r\n}\r\n","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @return if($n != null and $n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width. Null for the largest (last) breakpoint.\n// The maximum value is calculated as the minimum of the next one less 0.02px\n// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $next: breakpoint-next($name, $breakpoints);\n  @return if($next, breakpoint-min($next, $breakpoints) - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  $max: breakpoint-max($name, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($name, $breakpoints) {\n      @content;\n    }\n  }\n}\n",".page-container{\r\n    height:100%;\r\n    background-image: url('../../../images/ocean-water-wave-photo-1295138.jpg');\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n}",".page-list{\r\n    background-color: rgba(0,0,0,0.7);\r\n}","div.top-jt-dark-tran{\r\n    background-color:rgba(0,0,0,0.5);\r\n}","div.jt-background-image{\r\n    height:100%;\r\n    width:100%;\r\n    margin:auto 0;\r\n    overflow-y:scroll;\r\n}\r\n\r\n/*\r\n'../../../images/ocean-water-wave-photo-1295138.jpg',\r\n'../../../images/sunset-984052_1920.jpg',\r\n'../../../images/wallpaperflare.com_wallpaper.jpg'\r\n*/\r\n.day-image{\r\n    background-image:url('../../../images/ocean-water-wave-photo-1295138.jpg');\r\n    background-size: cover;\r\n    background-position: center;\r\n}\r\n\r\n.evening-image{\r\n    background-image:url('../../../images/sunset-984052_1920.jpg');\r\n    background-size: cover;\r\n    background-position: center;\r\n}\r\n\r\n.night-image{\r\n    background-image:url('../../../images/wallpaperflare.com_wallpaper.jpg');\r\n    background-size: cover;\r\n    background-position: center;\r\n}"]}